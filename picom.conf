#################################
#          Animations           #
#################################
# requires https://github.com/jonaburg/picom
# (These are also the default values)
transition-length = 400
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true
spawn-center-screen = false
spawn-center = false
#################################
#             Corners           #
#################################
# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom
corner-radius = 10.0;
rounded-corners-exclude = [
  #"window_type = 'normal'",
  "class_g = 'awesome'",
  #"class_g = 'URxvt'",
  "class_g = 'XTerm'",
  "class_g = 'kitty'",
  #"class_g = 'Alacritty'",
  "class_g = 'Polybar'",
  "class_g = 'polybar'",
  #"class_g = 'code-oss'",
  #"class_g = 'TelegramDesktop'",
  #"class_g = 'firefox'",
  "class_g = 'Thunderbird'",
  "class_g = 'Ulauncher'",
  #"class_g = 'zoom'",
  "class_g = 'tray'",
  "class_g = 'dmenu'",
];
round-borders = 10;
round-borders-exclude = [
  #"class_g = 'TelegramDesktop'",
];

shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use 
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = "" 

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
 fade-in-step = 0.7
#fade-in-step = 0.03;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.7;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
  "class_g = 'slop'",   # maim
  "class_g = 'zoom'",
  "class_g = 'scrot'"
]

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
inactive-opacity = 0.9;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 0.7;

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'slop'",                    # maim
  "class_g = 'zoom'",
  "class_g = 'scrot'",
  "class_g = 'i3lock'",
];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []
opacity-rule = [
  "80:class_g     = 'Bar'",             # lemonbar
  "100:class_g    = 'slop'",            # maim
  "100:class_g    = 'XTerm'",
  "90:class_g     = 'Sakura'",
  "100:class_g    = 'scrot'",
  "100:class_g    = 'kitty'",
  #"100:class_g    = 'Alacritty'",
  "80:class_g     = 'Polybar'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'Meld'",
  #"70:class_g     = 'TelegramDesktop'",
  "90:class_g     = 'Joplin'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'Brave-browser'",
  "100:class_g    = 'LibreWolf'",
  "100:class_g    = 'Thunderbird'",
  "100:class_g    = 'yuzu'",
  "100:class_g    = 'mpv'",
  "100:name       = 'Picture-in-picture'",
  "100:class_g    = 'discord'",
  "100:class_g    = 'i3lock'",
  "100:class_g    = 'Minecraft 1.12.2'",
];


#################################
#     Background-Blurring       #
#################################


# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method = 
# blur-size = 12
#
# blur-deviation = false

# Blur background of semi-transparent / ARGB windows. 
# Bad in performance, with driver-dependent behavior. 
# The name of the switch may change without prior notifications.
#
#blur-background = true;

# Blur background of windows when the window frame is not opaque. 
# Implies:
#    blur-background 
# Bad in performance, with driver-dependent behavior. The name may change.
#
# blur-background-frame = false;


# Use fixed blur strength rather than adjusting according to window opacity.
# blur-background-fixed = false;


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ''
# blur-kern = "3x3box";

#blur: {
#  # requires: https://github.com/ibhagwan/picom
#  #method = "gaussian";
#  method = "kernel";
#  strength = 7;
#  deviation = 1.0;
#  kernel = "11x11gaussian";
#  background = false;
#  background-frame = false;
#  background-fixed = false;
#  kern = "3x3box";
#}

#blur: {
#  method = "gaussian";
#  size = 10;
#  deviation = 5.0;
#}

blur: {
   method = "dual_kawase";
   strength = 3;
   background = false;
   background-frame = false;
   background-fixed = false;
}

# Exclude conditions for background blur.
blur-background-exclude = [
  #"window_type = 'dock'",
  #"window_type = 'desktop'",
  #
  # prevents picom from blurring the background
  # when taking selection screenshot with `main`
  # https://github.com/naelstrof/maim/issues/130
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Ulauncher'",
  "class_g = 'ulauncher'",
  "class_g = 'zoom'",
  "class_g = 'Polybar'",
  "class_g = 'brave-browser'",
  "class_g = 'Brave-browser'",
];


#################################
#       General Settings        #
#################################

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = true

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
experimental-backends = true;
backend = "glx";
#backend = "xrender";
#backend = "xr_glx_hybrid"

# Enable/disable VSync.
#vsync = false;
vsync = true;

#refresh-rate = 60;

use-damage = false;

glx-no-rebind-pixmap = true;
xrender-sync-fence = true;

unredir-if-possible = false;

wintypes:
{
  normal = { fade = false; shadow = false; }
  tooltip = { fade = false; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.7; }
  dropdown_menu = { opacity = 0.8; }
};
